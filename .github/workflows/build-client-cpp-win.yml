name: client-cpp-win
on:
#  push:
#    branches:
#      - master
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest
    outputs:
      date: ${{steps.sys-info.outputs.date}}
      java-version: ${{steps.sys-info.outputs.java-version}}
      iotdb-commit: ${{steps.iotdb-info.outputs.commit}}
      iotdb-branch: ${{steps.iotdb-info.outputs.branch}}
      iotdb-version: ${{steps.iotdb-info.outputs.version}}
      release-upload-url: ${{ steps.create-release.outputs.upload_url }}

    steps:
      - name: collect common information
        id: sys-info
        run: |
          echo "::set-output name=date::$(date +"%Y-%m-%d-%H-%M-%S")"
          echo "::set-output name=java-version::$(java -version 2>&1 |head -n 1 | cut -d ' ' -f 3 | sed 's/"//g')"

      - name: checkout iotdb
        uses: actions/checkout@v2
        with:
          path: iotdb
          repository: 'apache/iotdb'
          ref: rel/0.13
          fetch-depth: 0

      - name: collect iotdb infomartion
        id: iotdb-info
        run: |
          cd iotdb
          echo "::set-output name=commit::$(git rev-parse --short HEAD)"
          echo "::set-output name=branch::$(git branch |grep ^*|cut -d ' ' -f 2)"
          echo "::set-output name=version::$(cat pom.xml  | egrep '^    <version>'|sed 's# ##g'|  sed 's#<version>##g' | sed 's#</version>##g')"

      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.sys-info.outputs.date }}-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.commit }}
          release_name: IoTDB ${{ steps.iotdb-info.outputs.version }} ${{ steps.iotdb-info.output.commit }} (UTC+0 ${{ steps.sys-info.outputs.date }})
          body: |
            IoTDB Branch: [${{ steps.iotdb-info.outputs.branch }}](https://github.com/apache/iotdb/tree/${{ steps.iotdb-info.outputs.version }})
            IoTDB commit ID: [${{ steps.iotdb-info.outputs.commit }}](https://github.com/apache/iotdb/commit/${{ steps.iotdb-info.outputs.commit }})
          draft: false
          prerelease: false
#--------
  build-client-cpp-win:
    needs: collect
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        iotdb_version: [ rel/0.12,rel/0.13,master ]
        os: [ windows-2019,windows-2022 ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: set java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: download & unpack boost
        shell: cmd
        run: |
          C:\msys64\usr\bin\wget.exe -O ${{ github.workspace }}/boost_1_78_0.zip https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.zip
          7z x ${{ github.workspace }}/boost_1_78_0.zip -o${{ github.workspace }}/boost_1_78_0

      - name: install boost
        id: set-boost
        shell: pwsh
        run: |
          cd ${{ github.workspace }}/boost_1_78_0/boost_1_78_0
          .\bootstrap.bat
          .\b2
          echo "::set-output name=include::$(git branch |grep ^*|cut -d ' ' -f 2)"
          echo "::set-output name=library::$(git branch |grep ^*|cut -d ' ' -f 2)"

      - name: download & unpack flex&bison
        shell: cmd
        run: |
          C:\msys64\usr\bin\wget.exe -O ${{ github.workspace }}/win_flex_bison-latest.zip https://jaist.dl.sourceforge.net/project/winflexbison/win_flex_bison-latest.zip
          7z x ${{ github.workspace }}/win_flex_bison-latest.zip -o${{ github.workspace }}/win_flex_bison-latest

      - name: install openssl
        run: |
          choco install openssl

      - name: Checkout apache/iotdb
        uses: actions/checkout@v2
        with:
          path: iotdb
          repository: 'apache/iotdb'
          ref: rel/0.13
          fetch-depth: 0

      - name: compile client-cpp
        if: ${{ matrix.os == 'windows-2019' }}
        shell: cmd
        env:
          boost-include-dir: ${{ github.workspace }}\boost_1_78_0\boost_1_78_0
          boost-library.dir: ${{ github.workspace }}\boost_1_78_0\boost_1_78_0\stage\lib
          cmake-url: https://github.com/Kitware/CMake/releases/download/v3.23.1/cmake-3.23.1-windows-x86_64.zip
          cmake-root-dir : ${{ github.workspace }}\iotdb\compile-tools\thrift\target\cmake-3.23.1-windows-x86_64
        run: |
          cd ${{ github.workspace }}\iotdb
          set Path=%Path%;${{ github.workspace }}\win_flex_bison-latest
          set Path
          mvn package -Dcmake.generator="Visual Studio 16 2019" -P compile-cpp -pl server,client-cpp,example/client-cpp-example -am -DskipTests -Dboost.include.dir="%boost-include-dir%" -Dboost.library.dir="%boost-library.dir%" -Dcmake.url="%cmake-url%" -Dcmake.root.dir="%cmake-root-dir%"

      - name: compile client-cpp
        if: ${{ matrix.os == 'windows-2022' }}
        shell: cmd
        run: |
          cd ${{ github.workspace }}\iotdb
          set Path=%Path%;${{ github.workspace }}\win_flex_bison-latest
          set Path
          mvn package -Dcmake.generator="Visual Studio 17 2022" -P compile-cpp -pl server,client-cpp,example/client-cpp-example -am -DskipTests -Dboost.include.dir="${{ github.workspace }}\boost_1_78_0\boost_1_78_0" -Dboost.library.dir="${{ github.workspace }}\boost_1_78_0\boost_1_78_0\stage\lib" -Dcmake.url="https://github.com/Kitware/CMake/releases/download/v3.23.1/cmake-3.23.1-windows-x86_64.zip" -Dcmake.root.dir="${{ github.workspace }}\iotdb\compile-tools\thrift\target\cmake-3.23.1-windows-x86_64"

      - name: Upload apache-iotdb-${{ needs.collect.outputs.iotdb-version }}-client-cpp-${{ matrix.os }}-java-${{ needs.collect.outputs.java-version}}-${{ matrix.os }}.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.collect.outputs.release-upload-url }}
          asset_path: ${{ github.workspace }}/iotdb/client-cpp/target/client-cpp-${{ needs.collect.outputs.iotdb-version }}-cpp-windows-x86_64.zip
          asset_name: apache-iotdb-client-cpp-${{ needs.collect.outputs.iotdb-version }}-${{ matrix.os }}-x86_64-${{ needs.collect.outputs.iotdb-commit }}-java-${{ needs.collect.outputs.java-version}}-${{ matrix.os }}.zip
          asset_content_type: application/zip

      - name: compress client-cpp-example
        shell: bash
        run: |
          cd iotdb/example/client-cpp-example/target
          7z a  client-cpp-example-${{ needs.collect.outputs.iotdb-version }}-cpp-windows-x86_64.zip client CMakeLists.txt SessionExample.cpp

      - name: Upload apache-iotdb-${{ needs.collect.outputs.iotdb-version }}-client-cpp-example-${{ matrix.os }}-java-${{ needs.collect.outputs.java-version}}.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.collect.outputs.release-upload-url }}
          asset_path: ${{ github.workspace }}/iotdb/example/client-cpp-example/target/client-cpp-example-${{ needs.collect.outputs.iotdb-version }}-cpp-windows-x86_64.zip
          asset_name: apache-iotdb-client-cpp-example-${{ needs.collect.outputs.iotdb-version }}-${{ matrix.os }}-x86_64-${{ needs.collect.outputs.iotdb-commit }}-java-${{ needs.collect.outputs.java-version}}-${{ matrix.os }}.zip
          asset_content_type: application/zip