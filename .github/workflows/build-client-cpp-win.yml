name: client-cpp-win
on:
#  push:
#    branches:
#      - master
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest
    outputs:
      date: ${{steps.sys-info.outputs.date}}
    steps:
      - name: collect common information
        shell: bash
        id: sys-info
        run: echo "::set-output name=date::$(date +"%Y-%m-%d-%H-%M-%S")"
#--------
  create-release-java8:
    needs: collect
    runs-on: ubuntu-latest
    outputs:
      upload-url: ${{ steps.create-release.outputs.upload-url }}
    steps:
      - name: Create release java-8
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.collect.outputs.date }}-java8-apache-iotdb-client-cpp
          release_name: ${{ needs.collect.outputs.date }} java8 apache iotdb client cpp
          body: java 8
          draft: false
          prerelease: false
#--------
  create-release-java11:
    runs-on: ubuntu-latest
    needs: collect
    outputs:
      upload-url: ${{ steps.create-release.outputs.upload-url }}
    steps:
      - name: Create release java-11
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.collect.outputs.date }}-java11-apache-iotdb-client-cpp
          release_name: ${{ needs.collect.outputs.date }} java11 apache iotdb client cpp
          body: java 11
          draft: false
          prerelease: false
#--------
  build-client-cpp-win:
    needs: [ collect,create-release-java8,create-release-java11 ]
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        iotdb_version: [ rel/0.12,rel/0.13,master ]
        java_version: [ 8,11 ]
        os: [ windows-2019,windows-2022 ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java_version }}

      - name: download & unpack & install -> boost
        shell: cmd
        run: |
          C:\msys64\usr\bin\wget.exe -O ${{ github.workspace }}/boost_1_78_0-bin.7z https://github.com/xiaoyekanren/iotdb-daily-build-depend-pkg/releases/download/release-depend-bin/boost_1_78_0-bin.7z
          7z x ${{ github.workspace }}/boost_1_78_0-bin.7z -o${{ github.workspace }}/boost_1_78_0
#          C:\msys64\usr\bin\wget.exe -O ${{ github.workspace }}/boost_1_78_0.zip https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.zip
#          7z x ${{ github.workspace }}/boost_1_78_0.zip -o${{ github.workspace }}/boost_1_78_0
#          cd ${{ github.workspace }}/boost_1_78_0/boost_1_78_0
#          .\bootstrap.bat
#          .\b2
#          echo "::set-output name=include::$(git branch |grep ^*|cut -d ' ' -f 2)"
#          echo "::set-output name=library::$(git branch |grep ^*|cut -d ' ' -f 2)"

      - name: download & unpack flex&bison
        shell: cmd
        run: |
          C:\msys64\usr\bin\wget.exe -O ${{ github.workspace }}/win_flex_bison-latest.zip https://jaist.dl.sourceforge.net/project/winflexbison/win_flex_bison-latest.zip
          7z x ${{ github.workspace }}/win_flex_bison-latest.zip -o${{ github.workspace }}/win_flex_bison-latest

      - name: install openssl
        run: |
          choco install openssl

      - name: Checkout apache/iotdb
        uses: actions/checkout@v2
        with:
          path: iotdb
          repository: 'apache/iotdb'
          ref: ${{ matrix.iotdb_version }}
          fetch-depth: 0

      - name: Collect IoTDB information
        id: iotdb-info
        shell: bash
        run: |
          cd iotdb
          echo "::set-output name=commit::$(git rev-parse --short HEAD)"
          echo "::set-output name=branch::$(git branch |grep ^*|cut -d ' ' -f 2)"
          echo "::set-output name=version::$(cat pom.xml | grep -e '^    <version>' | sed 's# ##g' | sed 's#<version>##g' | sed 's#</version>##g')"

      - name: compile client-cpp
        if: ${{ matrix.os == 'windows-2019' }}
        shell: cmd
        env:
          boost-include-dir: ${{ github.workspace }}\boost_1_78_0\boost_1_78_0
          boost-library.dir: ${{ github.workspace }}\boost_1_78_0\boost_1_78_0\stage\lib
          cmake-url: https://github.com/Kitware/CMake/releases/download/v3.23.1/cmake-3.23.1-windows-x86_64.zip
          cmake-root-dir : ${{ github.workspace }}\iotdb\compile-tools\thrift\target\cmake-3.23.1-windows-x86_64
        run: |
          cd ${{ github.workspace }}\iotdb
          set Path=%Path%;${{ github.workspace }}\win_flex_bison-latest
          set Path
          mvn package -Dcmake.generator="Visual Studio 16 2019" -P compile-cpp -pl server,client-cpp,example/client-cpp-example -am -DskipTests -Dboost.include.dir="%boost-include-dir%" -Dboost.library.dir="%boost-library.dir%" -Dcmake.url="%cmake-url%" -Dcmake.root.dir="%cmake-root-dir%"

      - name: compile client-cpp
        if: ${{ matrix.os == 'windows-2022' }}
        shell: cmd
        env:
          boost-include-dir: ${{ github.workspace }}\boost_1_78_0\boost_1_78_0
          boost-library.dir: ${{ github.workspace }}\boost_1_78_0\boost_1_78_0\stage\lib
          cmake-url: https://github.com/Kitware/CMake/releases/download/v3.23.1/cmake-3.23.1-windows-x86_64.zip
          cmake-root-dir: ${{ github.workspace }}\iotdb\compile-tools\thrift\target\cmake-3.23.1-windows-x86_64
        run: |
          cd ${{ github.workspace }}\iotdb
          set Path=%Path%;${{ github.workspace }}\win_flex_bison-latest
          set Path
          mvn package -Dcmake.generator="Visual Studio 17 2022" -P compile-cpp -pl server,client-cpp,example/client-cpp-example -am -DskipTests -Dboost.include.dir="%boost-include-dir%" -Dboost.library.dir="%boost-library.dir%" -Dcmake.url="%cmake-url%" -Dcmake.root.dir="%cmake-root-dir%"

      - name: Upload apache-iotdb-client-cpp-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}.zip
        if : ${{ matrix.java_version  == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload-url }}
          asset_path: ${{ github.workspace }}/iotdb/client-cpp/target/client-cpp-${{ steps.iotdb-info.outputs.version }}-cpp-windows-x86_64.zip
          asset_name: apache-iotdb-client-cpp-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}-x86_64.zip
          asset_content_type: application/zip

      - name: Upload apache-iotdb-client-cpp-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}.zip
        if : ${{ matrix.java_version  == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload-url }}
          asset_path: ${{ github.workspace }}/iotdb/client-cpp/target/client-cpp-${{ steps.iotdb-info.outputs.version }}-cpp-windows-x86_64.zip
          asset_name: apache-iotdb-client-cpp-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}-x86_64.zip
          asset_content_type: application/zip

      - name: compress client-cpp-example
        shell: bash
        run: |
          cd iotdb/example/client-cpp-example/target
          7z a  client-cpp-example-${{ steps.iotdb-info.outputs.version }}-cpp-windows-x86_64.zip client CMakeLists.txt SessionExample.cpp

      - name: Upload apache-iotdb-client-cpp-example-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}.zip
        if: ${{ matrix.java_version  == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload-url }}
          asset_path: ${{ github.workspace }}/iotdb/example/client-cpp-example/target/client-cpp-example-${{ steps.iotdb-info.outputs.version }}-cpp-windows-x86_64.zip
          asset_name: apache-iotdb-client-cpp-example-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}-x86_64.zip
          asset_content_type: application/zip

      - name: Upload apache-iotdb-client-cpp-example-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}.zip
        if: ${{ matrix.java_version  == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload-url }}
          asset_path: ${{ github.workspace }}/iotdb/example/client-cpp-example/target/client-cpp-example-${{ steps.iotdb-info.outputs.version }}-cpp-windows-x86_64.zip
          asset_name: apache-iotdb-client-cpp-example-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}-x86_64.zip
          asset_content_type: application/zip