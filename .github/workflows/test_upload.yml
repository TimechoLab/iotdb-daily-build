name: test for upload
on:
  workflow_dispatch:

jobs:
#--------
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      check_result: ${{ steps.check-commit.outputs.result }}
    steps:
      - name: collect common info
        shell: bash
        id: sys-info
        run: echo "::set-output name=date::$(date +"%Y-%m-%d")"

      - name: clone db
        uses: actions/checkout@v2
        with:
          path: iotdb-daily-build-dependence
          repository: 'xiaoyekanren/iotdb-daily-build-dependence'
          ref: master
          fetch-depth: 0

      - name: Checkout apache/iotdb
        uses: actions/checkout@v2
        with:
          path: iotdb
          repository: 'apache/iotdb'
          ref: master
          fetch-depth: 0

      - name: Collect IoTDB information
        id: iotdb-info
        run: |
          cd ${{ github.workspace }}/iotdb
          echo "::set-output name=commit_id::$(git log  -n 1 | head -n 1  | cut -d ' ' -f 2)"
          echo "::set-output name=commit_time::$(git log -n1 --pretty='format:%cd' --date=iso)"
          echo "::set-output name=branch::$(git branch |grep ^*|cut -d ' ' -f 2)"

      - name: Checkout iotdb-daily-build
        uses: actions/checkout@v2
        with:
          path: iotdb-daily-build
          repository: 'xiaoyekanren/iotdb-daily-build'
          ref: master
          fetch-depth: 0

      - name: check
        id: check-commit
        env:
          PYTHONPATH: $PYTHONPATH:${{ github.workspace }}/iotdb-daily-build/program
          DB_FILE: ${{ github.workspace }}/iotdb-daily-build-dependence/db/db.db
        run: |
          cd ${{ github.workspace }}/iotdb-daily-build/program
          echo "::set-output name=result::$(python3 check_commit.py ${{ steps.iotdb-info.outputs.branch }} ${{ steps.iotdb-info.outputs.commit_id }} ${{ steps.iotdb-info.outputs.commit_time }})" 

      - name: upload db
        if: ${{ steps.check-commit.outputs.result }} == 'update'
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ${{ github.workspace }}/iotdb-daily-build-dependence
          git config --local user.email "876670773+github-actions[bot]@qq.com"
          git config --local user.name "github-actions[bot]"
          cd db
          git add db.db
          git commit -m "${{steps.sys-info.outputs.date}} github-actions[bot] push update "
          git push -u origin master

##--------
#  collect:
#    if: ${{ needs.check-commit.outputs.check_result }} == 'abc'
#    runs-on: ubuntu-latest
#    outputs:
#      date: ${{steps.sys-info.outputs.date}}
#    steps:
#      - name: collect common info
#        shell: bash
#        id: sys-info
#        run: echo "::set-output name=date::$(date +"%Y-%m-%d")"
##--------
#  build-in-linux:
#    if: ${{ needs.check-commit.outputs.check_result }} == 'abc'
#    needs: [ collect ]
#    strategy:
#      fail-fast: false
#      max-parallel: 20
#      matrix:
#        iotdb_version: [ rel/0.12 ]
#        java_version: [ 8 ]
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Set java ${{ matrix.java }}
#        uses: actions/setup-java@v1
#        with:
#          java-version: ${{ matrix.java_version }}
#
#      - name: Checkout apache/iotdb
#        uses: actions/checkout@v2
#        with:
#          path: iotdb
#          repository: 'apache/iotdb'
#          ref: ${{ matrix.iotdb_version }}
#          fetch-depth: 0
#
#      - name: Collect IoTDB info
#        id: iotdb-info
#        run: |
#          cd ${{ github.workspace }}/iotdb
#          echo "::set-output name=commit::$(git rev-parse --short HEAD)"
#          echo "::set-output name=branch::$(git branch |grep ^*|cut -d ' ' -f 2)"
#          echo "::set-output name=version::$(cat pom.xml | grep -e '^    <version>' | sed 's# ##g' | sed 's#<version>##g' | sed 's#</version>##g')"
#
#      - name: Build Apache IoTDB binaries
#        run: |
#          zip -r iotdb.zip iotdb
##          cd ${{ github.workspace }}/iotdb
##          mvn clean package -DskipTests
##---upload zip
#      - name: ssh to mkdir
#        uses: appleboy/ssh-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          host: ${{ secrets.IOTDBFUTURE_HOST }}
#          username: ${{ secrets.IOTDBFUTURE_HOST_USER }}
#          key: ${{ secrets.IOTDBFUTURE_TOKEN }}
#          port: ${{ secrets.IOTDBFUTURE_HOST_PORT }}
#          script: mkdir -p /home/ubuntu/web/downloads/${{ needs.collect.outputs.date }}/${{ matrix.java_version }}/${{ matrix.iotdb_version }}
#      - name: scp to upload file
#        uses: appleboy/scp-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          host: ${{ secrets.IOTDBFUTURE_HOST }}
#          username: ${{ secrets.IOTDBFUTURE_HOST_USER }}
#          port: ${{ secrets.IOTDBFUTURE_HOST_PORT }}
#          key: ${{ secrets.IOTDBFUTURE_TOKEN }}
#          source: "${{ github.workspace }}/iotdb.zip"
##          source: "${{ github.workspace }}/iotdb/distribution/target/apache-iotdb-${{ steps.iotdb-info.outputs.version }}-all-bin.zip,${{ github.workspace }}/iotdb/distribution/target/apache-iotdb-${{ steps.iotdb-info.outputs.version }}-server-bin.zip,${{ github.workspace }}/iotdb/distribution/target/apache-iotdb-${{ steps.iotdb-info.outputs.version }}-cli-bin.zip"
#          target: "/home/ubuntu/web/downloads/${{ needs.collect.outputs.date }}/${{ matrix.java_version }}/${{ matrix.iotdb_version }}"